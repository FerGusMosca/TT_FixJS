//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("StrategyReportsModel", "FK_execution_reports_positions", "positions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(zHFT.Main.DataAccess.positions), "execution_reports", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.Main.DataAccess.execution_reports), true)]
[assembly: EdmRelationshipAttribute("StrategyReportsModel", "FK_orders_positions", "positions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(zHFT.Main.DataAccess.positions), "orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.Main.DataAccess.orders), true)]
[assembly: EdmRelationshipAttribute("StrategyReportsModel", "FK_execution_summaries_positions1", "positions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(zHFT.Main.DataAccess.positions), "execution_summaries", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(zHFT.Main.DataAccess.execution_summaries), true)]

#endregion

namespace zHFT.Main.DataAccess
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class StrategyReportsEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new StrategyReportsEntities object using the connection string found in the 'StrategyReportsEntities' section of the application configuration file.
        /// </summary>
        public StrategyReportsEntities() : base("name=StrategyReportsEntities", "StrategyReportsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new StrategyReportsEntities object.
        /// </summary>
        public StrategyReportsEntities(string connectionString) : base(connectionString, "StrategyReportsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new StrategyReportsEntities object.
        /// </summary>
        public StrategyReportsEntities(EntityConnection connection) : base(connection, "StrategyReportsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<execution_reports> execution_reports
        {
            get
            {
                if ((_execution_reports == null))
                {
                    _execution_reports = base.CreateObjectSet<execution_reports>("execution_reports");
                }
                return _execution_reports;
            }
        }
        private ObjectSet<execution_reports> _execution_reports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<orders> orders
        {
            get
            {
                if ((_orders == null))
                {
                    _orders = base.CreateObjectSet<orders>("orders");
                }
                return _orders;
            }
        }
        private ObjectSet<orders> _orders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<positions> positions
        {
            get
            {
                if ((_positions == null))
                {
                    _positions = base.CreateObjectSet<positions>("positions");
                }
                return _positions;
            }
        }
        private ObjectSet<positions> _positions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<execution_summaries> execution_summaries
        {
            get
            {
                if ((_execution_summaries == null))
                {
                    _execution_summaries = base.CreateObjectSet<execution_summaries>("execution_summaries");
                }
                return _execution_summaries;
            }
        }
        private ObjectSet<execution_summaries> _execution_summaries;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the execution_reports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToexecution_reports(execution_reports execution_reports)
        {
            base.AddObject("execution_reports", execution_reports);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the orders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToorders(orders orders)
        {
            base.AddObject("orders", orders);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the positions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopositions(positions positions)
        {
            base.AddObject("positions", positions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the execution_summaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToexecution_summaries(execution_summaries execution_summaries)
        {
            base.AddObject("execution_summaries", execution_summaries);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        /// <param name="definition">No Metadata Documentation available.</param>
        public int sp_alterdiagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        /// <param name="definition">No Metadata Documentation available.</param>
        public int sp_creatediagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public int sp_dropdiagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="new_diagramname">No Metadata Documentation available.</param>
        public int sp_renamediagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, global::System.String new_diagramname)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter new_diagramnameParameter;
            if (new_diagramname != null)
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", new_diagramname);
            }
            else
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int sp_upgraddiagrams()
        {
            return base.ExecuteFunction("sp_upgraddiagrams");
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StrategyReportsModel", Name="execution_reports")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class execution_reports : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new execution_reports object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="leaves_qty">Initial value of the leaves_qty property.</param>
        /// <param name="cum_qty">Initial value of the cum_qty property.</param>
        /// <param name="pos_id">Initial value of the pos_id property.</param>
        public static execution_reports Createexecution_reports(global::System.Int64 id, global::System.Double leaves_qty, global::System.Double cum_qty, global::System.Int32 pos_id)
        {
            execution_reports execution_reports = new execution_reports();
            execution_reports.id = id;
            execution_reports.leaves_qty = leaves_qty;
            execution_reports.cum_qty = cum_qty;
            execution_reports.pos_id = pos_id;
            return execution_reports;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String exec_id
        {
            get
            {
                return _exec_id;
            }
            set
            {
                Onexec_idChanging(value);
                ReportPropertyChanging("exec_id");
                _exec_id = StructuralObject.SetValidValue(value, true, "exec_id");
                ReportPropertyChanged("exec_id");
                Onexec_idChanged();
            }
        }
        private global::System.String _exec_id;
        partial void Onexec_idChanging(global::System.String value);
        partial void Onexec_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> transact_time
        {
            get
            {
                return _transact_time;
            }
            set
            {
                Ontransact_timeChanging(value);
                ReportPropertyChanging("transact_time");
                _transact_time = StructuralObject.SetValidValue(value, "transact_time");
                ReportPropertyChanged("transact_time");
                Ontransact_timeChanged();
            }
        }
        private Nullable<global::System.DateTime> _transact_time;
        partial void Ontransact_timeChanging(Nullable<global::System.DateTime> value);
        partial void Ontransact_timeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String exec_type
        {
            get
            {
                return _exec_type;
            }
            set
            {
                Onexec_typeChanging(value);
                ReportPropertyChanging("exec_type");
                _exec_type = StructuralObject.SetValidValue(value, true, "exec_type");
                ReportPropertyChanged("exec_type");
                Onexec_typeChanged();
            }
        }
        private global::System.String _exec_type;
        partial void Onexec_typeChanging(global::System.String value);
        partial void Onexec_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ord_status
        {
            get
            {
                return _ord_status;
            }
            set
            {
                Onord_statusChanging(value);
                ReportPropertyChanging("ord_status");
                _ord_status = StructuralObject.SetValidValue(value, true, "ord_status");
                ReportPropertyChanged("ord_status");
                Onord_statusChanged();
            }
        }
        private global::System.String _ord_status;
        partial void Onord_statusChanging(global::System.String value);
        partial void Onord_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ord_rej_reason
        {
            get
            {
                return _ord_rej_reason;
            }
            set
            {
                Onord_rej_reasonChanging(value);
                ReportPropertyChanging("ord_rej_reason");
                _ord_rej_reason = StructuralObject.SetValidValue(value, "ord_rej_reason");
                ReportPropertyChanged("ord_rej_reason");
                Onord_rej_reasonChanged();
            }
        }
        private Nullable<global::System.Int32> _ord_rej_reason;
        partial void Onord_rej_reasonChanging(Nullable<global::System.Int32> value);
        partial void Onord_rej_reasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> last_qty
        {
            get
            {
                return _last_qty;
            }
            set
            {
                Onlast_qtyChanging(value);
                ReportPropertyChanging("last_qty");
                _last_qty = StructuralObject.SetValidValue(value, "last_qty");
                ReportPropertyChanged("last_qty");
                Onlast_qtyChanged();
            }
        }
        private Nullable<global::System.Double> _last_qty;
        partial void Onlast_qtyChanging(Nullable<global::System.Double> value);
        partial void Onlast_qtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> last_px
        {
            get
            {
                return _last_px;
            }
            set
            {
                Onlast_pxChanging(value);
                ReportPropertyChanging("last_px");
                _last_px = StructuralObject.SetValidValue(value, "last_px");
                ReportPropertyChanged("last_px");
                Onlast_pxChanged();
            }
        }
        private Nullable<global::System.Double> _last_px;
        partial void Onlast_pxChanging(Nullable<global::System.Double> value);
        partial void Onlast_pxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String last_mkt
        {
            get
            {
                return _last_mkt;
            }
            set
            {
                Onlast_mktChanging(value);
                ReportPropertyChanging("last_mkt");
                _last_mkt = StructuralObject.SetValidValue(value, true, "last_mkt");
                ReportPropertyChanged("last_mkt");
                Onlast_mktChanged();
            }
        }
        private global::System.String _last_mkt;
        partial void Onlast_mktChanging(global::System.String value);
        partial void Onlast_mktChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double leaves_qty
        {
            get
            {
                return _leaves_qty;
            }
            set
            {
                Onleaves_qtyChanging(value);
                ReportPropertyChanging("leaves_qty");
                _leaves_qty = StructuralObject.SetValidValue(value, "leaves_qty");
                ReportPropertyChanged("leaves_qty");
                Onleaves_qtyChanged();
            }
        }
        private global::System.Double _leaves_qty;
        partial void Onleaves_qtyChanging(global::System.Double value);
        partial void Onleaves_qtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double cum_qty
        {
            get
            {
                return _cum_qty;
            }
            set
            {
                Oncum_qtyChanging(value);
                ReportPropertyChanging("cum_qty");
                _cum_qty = StructuralObject.SetValidValue(value, "cum_qty");
                ReportPropertyChanged("cum_qty");
                Oncum_qtyChanged();
            }
        }
        private global::System.Double _cum_qty;
        partial void Oncum_qtyChanging(global::System.Double value);
        partial void Oncum_qtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> avg_px
        {
            get
            {
                return _avg_px;
            }
            set
            {
                Onavg_pxChanging(value);
                ReportPropertyChanging("avg_px");
                _avg_px = StructuralObject.SetValidValue(value, "avg_px");
                ReportPropertyChanged("avg_px");
                Onavg_pxChanged();
            }
        }
        private Nullable<global::System.Double> _avg_px;
        partial void Onavg_pxChanging(Nullable<global::System.Double> value);
        partial void Onavg_pxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> commission
        {
            get
            {
                return _commission;
            }
            set
            {
                OncommissionChanging(value);
                ReportPropertyChanging("commission");
                _commission = StructuralObject.SetValidValue(value, "commission");
                ReportPropertyChanged("commission");
                OncommissionChanged();
            }
        }
        private Nullable<global::System.Double> _commission;
        partial void OncommissionChanging(Nullable<global::System.Double> value);
        partial void OncommissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String text
        {
            get
            {
                return _text;
            }
            set
            {
                OntextChanging(value);
                ReportPropertyChanging("text");
                _text = StructuralObject.SetValidValue(value, true, "text");
                ReportPropertyChanged("text");
                OntextChanged();
            }
        }
        private global::System.String _text;
        partial void OntextChanging(global::System.String value);
        partial void OntextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pos_id
        {
            get
            {
                return _pos_id;
            }
            set
            {
                Onpos_idChanging(value);
                ReportPropertyChanging("pos_id");
                _pos_id = StructuralObject.SetValidValue(value, "pos_id");
                ReportPropertyChanged("pos_id");
                Onpos_idChanged();
            }
        }
        private global::System.Int32 _pos_id;
        partial void Onpos_idChanging(global::System.Int32 value);
        partial void Onpos_idChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StrategyReportsModel", "FK_execution_reports_positions", "positions")]
        public positions positions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<positions>("StrategyReportsModel.FK_execution_reports_positions", "positions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<positions>("StrategyReportsModel.FK_execution_reports_positions", "positions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<positions> positionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<positions>("StrategyReportsModel.FK_execution_reports_positions", "positions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<positions>("StrategyReportsModel.FK_execution_reports_positions", "positions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StrategyReportsModel", Name="execution_summaries")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class execution_summaries : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new execution_summaries object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="date">Initial value of the date property.</param>
        /// <param name="symbol">Initial value of the symbol property.</param>
        /// <param name="cum_qty">Initial value of the cum_qty property.</param>
        /// <param name="leaves_qty">Initial value of the leaves_qty property.</param>
        /// <param name="pos_id">Initial value of the pos_id property.</param>
        public static execution_summaries Createexecution_summaries(global::System.Int64 id, global::System.DateTime date, global::System.String symbol, global::System.Double cum_qty, global::System.Double leaves_qty, global::System.Int32 pos_id)
        {
            execution_summaries execution_summaries = new execution_summaries();
            execution_summaries.id = id;
            execution_summaries.date = date;
            execution_summaries.symbol = symbol;
            execution_summaries.cum_qty = cum_qty;
            execution_summaries.leaves_qty = leaves_qty;
            execution_summaries.pos_id = pos_id;
            return execution_summaries;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value, "date");
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private global::System.DateTime _date;
        partial void OndateChanging(global::System.DateTime value);
        partial void OndateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String symbol
        {
            get
            {
                return _symbol;
            }
            set
            {
                OnsymbolChanging(value);
                ReportPropertyChanging("symbol");
                _symbol = StructuralObject.SetValidValue(value, false, "symbol");
                ReportPropertyChanged("symbol");
                OnsymbolChanged();
            }
        }
        private global::System.String _symbol;
        partial void OnsymbolChanging(global::System.String value);
        partial void OnsymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> avg_px
        {
            get
            {
                return _avg_px;
            }
            set
            {
                Onavg_pxChanging(value);
                ReportPropertyChanging("avg_px");
                _avg_px = StructuralObject.SetValidValue(value, "avg_px");
                ReportPropertyChanged("avg_px");
                Onavg_pxChanged();
            }
        }
        private Nullable<global::System.Double> _avg_px;
        partial void Onavg_pxChanging(Nullable<global::System.Double> value);
        partial void Onavg_pxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double cum_qty
        {
            get
            {
                return _cum_qty;
            }
            set
            {
                Oncum_qtyChanging(value);
                ReportPropertyChanging("cum_qty");
                _cum_qty = StructuralObject.SetValidValue(value, "cum_qty");
                ReportPropertyChanged("cum_qty");
                Oncum_qtyChanged();
            }
        }
        private global::System.Double _cum_qty;
        partial void Oncum_qtyChanging(global::System.Double value);
        partial void Oncum_qtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double leaves_qty
        {
            get
            {
                return _leaves_qty;
            }
            set
            {
                Onleaves_qtyChanging(value);
                ReportPropertyChanging("leaves_qty");
                _leaves_qty = StructuralObject.SetValidValue(value, "leaves_qty");
                ReportPropertyChanged("leaves_qty");
                Onleaves_qtyChanged();
            }
        }
        private global::System.Double _leaves_qty;
        partial void Onleaves_qtyChanging(global::System.Double value);
        partial void Onleaves_qtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> commission
        {
            get
            {
                return _commission;
            }
            set
            {
                OncommissionChanging(value);
                ReportPropertyChanging("commission");
                _commission = StructuralObject.SetValidValue(value, "commission");
                ReportPropertyChanged("commission");
                OncommissionChanged();
            }
        }
        private Nullable<global::System.Double> _commission;
        partial void OncommissionChanging(Nullable<global::System.Double> value);
        partial void OncommissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String text
        {
            get
            {
                return _text;
            }
            set
            {
                OntextChanging(value);
                ReportPropertyChanging("text");
                _text = StructuralObject.SetValidValue(value, true, "text");
                ReportPropertyChanged("text");
                OntextChanged();
            }
        }
        private global::System.String _text;
        partial void OntextChanging(global::System.String value);
        partial void OntextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pos_id
        {
            get
            {
                return _pos_id;
            }
            set
            {
                Onpos_idChanging(value);
                ReportPropertyChanging("pos_id");
                _pos_id = StructuralObject.SetValidValue(value, "pos_id");
                ReportPropertyChanged("pos_id");
                Onpos_idChanged();
            }
        }
        private global::System.Int32 _pos_id;
        partial void Onpos_idChanging(global::System.Int32 value);
        partial void Onpos_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String console
        {
            get
            {
                return _console;
            }
            set
            {
                OnconsoleChanging(value);
                ReportPropertyChanging("console");
                _console = StructuralObject.SetValidValue(value, true, "console");
                ReportPropertyChanged("console");
                OnconsoleChanged();
            }
        }
        private global::System.String _console;
        partial void OnconsoleChanging(global::System.String value);
        partial void OnconsoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> account_number
        {
            get
            {
                return _account_number;
            }
            set
            {
                Onaccount_numberChanging(value);
                ReportPropertyChanging("account_number");
                _account_number = StructuralObject.SetValidValue(value, "account_number");
                ReportPropertyChanged("account_number");
                Onaccount_numberChanged();
            }
        }
        private Nullable<global::System.Int32> _account_number;
        partial void Onaccount_numberChanging(Nullable<global::System.Int32> value);
        partial void Onaccount_numberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StrategyReportsModel", "FK_execution_summaries_positions1", "positions")]
        public positions positions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<positions>("StrategyReportsModel.FK_execution_summaries_positions1", "positions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<positions>("StrategyReportsModel.FK_execution_summaries_positions1", "positions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<positions> positionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<positions>("StrategyReportsModel.FK_execution_summaries_positions1", "positions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<positions>("StrategyReportsModel.FK_execution_summaries_positions1", "positions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StrategyReportsModel", Name="orders")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class orders : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new orders object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="order_id">Initial value of the order_id property.</param>
        /// <param name="symbol">Initial value of the symbol property.</param>
        /// <param name="side">Initial value of the side property.</param>
        /// <param name="quantity_type">Initial value of the quantity_type property.</param>
        /// <param name="price_type">Initial value of the price_type property.</param>
        /// <param name="index">Initial value of the index property.</param>
        /// <param name="pos_id">Initial value of the pos_id property.</param>
        public static orders Createorders(global::System.Int64 id, global::System.String order_id, global::System.String symbol, global::System.String side, global::System.Int32 quantity_type, global::System.Int32 price_type, global::System.Int32 index, global::System.Int32 pos_id)
        {
            orders orders = new orders();
            orders.id = id;
            orders.order_id = order_id;
            orders.symbol = symbol;
            orders.side = side;
            orders.quantity_type = quantity_type;
            orders.price_type = price_type;
            orders.index = index;
            orders.pos_id = pos_id;
            return orders;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String order_id
        {
            get
            {
                return _order_id;
            }
            set
            {
                Onorder_idChanging(value);
                ReportPropertyChanging("order_id");
                _order_id = StructuralObject.SetValidValue(value, false, "order_id");
                ReportPropertyChanged("order_id");
                Onorder_idChanged();
            }
        }
        private global::System.String _order_id;
        partial void Onorder_idChanging(global::System.String value);
        partial void Onorder_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String symbol
        {
            get
            {
                return _symbol;
            }
            set
            {
                OnsymbolChanging(value);
                ReportPropertyChanging("symbol");
                _symbol = StructuralObject.SetValidValue(value, false, "symbol");
                ReportPropertyChanged("symbol");
                OnsymbolChanged();
            }
        }
        private global::System.String _symbol;
        partial void OnsymbolChanging(global::System.String value);
        partial void OnsymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String settl_type
        {
            get
            {
                return _settl_type;
            }
            set
            {
                Onsettl_typeChanging(value);
                ReportPropertyChanging("settl_type");
                _settl_type = StructuralObject.SetValidValue(value, true, "settl_type");
                ReportPropertyChanged("settl_type");
                Onsettl_typeChanged();
            }
        }
        private global::System.String _settl_type;
        partial void Onsettl_typeChanging(global::System.String value);
        partial void Onsettl_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> settl_date
        {
            get
            {
                return _settl_date;
            }
            set
            {
                Onsettl_dateChanging(value);
                ReportPropertyChanging("settl_date");
                _settl_date = StructuralObject.SetValidValue(value, "settl_date");
                ReportPropertyChanged("settl_date");
                Onsettl_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _settl_date;
        partial void Onsettl_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onsettl_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String side
        {
            get
            {
                return _side;
            }
            set
            {
                OnsideChanging(value);
                ReportPropertyChanging("side");
                _side = StructuralObject.SetValidValue(value, false, "side");
                ReportPropertyChanged("side");
                OnsideChanged();
            }
        }
        private global::System.String _side;
        partial void OnsideChanging(global::System.String value);
        partial void OnsideChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String exchange
        {
            get
            {
                return _exchange;
            }
            set
            {
                OnexchangeChanging(value);
                ReportPropertyChanging("exchange");
                _exchange = StructuralObject.SetValidValue(value, true, "exchange");
                ReportPropertyChanged("exchange");
                OnexchangeChanged();
            }
        }
        private global::System.String _exchange;
        partial void OnexchangeChanging(global::System.String value);
        partial void OnexchangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ord_type
        {
            get
            {
                return _ord_type;
            }
            set
            {
                Onord_typeChanging(value);
                ReportPropertyChanging("ord_type");
                _ord_type = StructuralObject.SetValidValue(value, true, "ord_type");
                ReportPropertyChanged("ord_type");
                Onord_typeChanged();
            }
        }
        private global::System.String _ord_type;
        partial void Onord_typeChanging(global::System.String value);
        partial void Onord_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 quantity_type
        {
            get
            {
                return _quantity_type;
            }
            set
            {
                Onquantity_typeChanging(value);
                ReportPropertyChanging("quantity_type");
                _quantity_type = StructuralObject.SetValidValue(value, "quantity_type");
                ReportPropertyChanged("quantity_type");
                Onquantity_typeChanged();
            }
        }
        private global::System.Int32 _quantity_type;
        partial void Onquantity_typeChanging(global::System.Int32 value);
        partial void Onquantity_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> order_qty
        {
            get
            {
                return _order_qty;
            }
            set
            {
                Onorder_qtyChanging(value);
                ReportPropertyChanging("order_qty");
                _order_qty = StructuralObject.SetValidValue(value, "order_qty");
                ReportPropertyChanged("order_qty");
                Onorder_qtyChanged();
            }
        }
        private Nullable<global::System.Double> _order_qty;
        partial void Onorder_qtyChanging(Nullable<global::System.Double> value);
        partial void Onorder_qtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> cash_order_qty
        {
            get
            {
                return _cash_order_qty;
            }
            set
            {
                Oncash_order_qtyChanging(value);
                ReportPropertyChanging("cash_order_qty");
                _cash_order_qty = StructuralObject.SetValidValue(value, "cash_order_qty");
                ReportPropertyChanged("cash_order_qty");
                Oncash_order_qtyChanged();
            }
        }
        private Nullable<global::System.Double> _cash_order_qty;
        partial void Oncash_order_qtyChanging(Nullable<global::System.Double> value);
        partial void Oncash_order_qtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> order_percent
        {
            get
            {
                return _order_percent;
            }
            set
            {
                Onorder_percentChanging(value);
                ReportPropertyChanging("order_percent");
                _order_percent = StructuralObject.SetValidValue(value, "order_percent");
                ReportPropertyChanged("order_percent");
                Onorder_percentChanged();
            }
        }
        private Nullable<global::System.Double> _order_percent;
        partial void Onorder_percentChanging(Nullable<global::System.Double> value);
        partial void Onorder_percentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 price_type
        {
            get
            {
                return _price_type;
            }
            set
            {
                Onprice_typeChanging(value);
                ReportPropertyChanging("price_type");
                _price_type = StructuralObject.SetValidValue(value, "price_type");
                ReportPropertyChanged("price_type");
                Onprice_typeChanged();
            }
        }
        private global::System.Int32 _price_type;
        partial void Onprice_typeChanging(global::System.Int32 value);
        partial void Onprice_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> price
        {
            get
            {
                return _price;
            }
            set
            {
                OnpriceChanging(value);
                ReportPropertyChanging("price");
                _price = StructuralObject.SetValidValue(value, "price");
                ReportPropertyChanged("price");
                OnpriceChanged();
            }
        }
        private Nullable<global::System.Double> _price;
        partial void OnpriceChanging(Nullable<global::System.Double> value);
        partial void OnpriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> stop_px
        {
            get
            {
                return _stop_px;
            }
            set
            {
                Onstop_pxChanging(value);
                ReportPropertyChanging("stop_px");
                _stop_px = StructuralObject.SetValidValue(value, "stop_px");
                ReportPropertyChanged("stop_px");
                Onstop_pxChanged();
            }
        }
        private Nullable<global::System.Double> _stop_px;
        partial void Onstop_pxChanging(Nullable<global::System.Double> value);
        partial void Onstop_pxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String currency
        {
            get
            {
                return _currency;
            }
            set
            {
                OncurrencyChanging(value);
                ReportPropertyChanging("currency");
                _currency = StructuralObject.SetValidValue(value, true, "currency");
                ReportPropertyChanged("currency");
                OncurrencyChanged();
            }
        }
        private global::System.String _currency;
        partial void OncurrencyChanging(global::System.String value);
        partial void OncurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> time_inforce
        {
            get
            {
                return _time_inforce;
            }
            set
            {
                Ontime_inforceChanging(value);
                ReportPropertyChanging("time_inforce");
                _time_inforce = StructuralObject.SetValidValue(value, "time_inforce");
                ReportPropertyChanged("time_inforce");
                Ontime_inforceChanged();
            }
        }
        private Nullable<global::System.Int32> _time_inforce;
        partial void Ontime_inforceChanging(Nullable<global::System.Int32> value);
        partial void Ontime_inforceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> expire_time
        {
            get
            {
                return _expire_time;
            }
            set
            {
                Onexpire_timeChanging(value);
                ReportPropertyChanging("expire_time");
                _expire_time = StructuralObject.SetValidValue(value, "expire_time");
                ReportPropertyChanged("expire_time");
                Onexpire_timeChanged();
            }
        }
        private Nullable<global::System.DateTime> _expire_time;
        partial void Onexpire_timeChanging(Nullable<global::System.DateTime> value);
        partial void Onexpire_timeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> effective_time
        {
            get
            {
                return _effective_time;
            }
            set
            {
                Oneffective_timeChanging(value);
                ReportPropertyChanging("effective_time");
                _effective_time = StructuralObject.SetValidValue(value, "effective_time");
                ReportPropertyChanged("effective_time");
                Oneffective_timeChanged();
            }
        }
        private Nullable<global::System.DateTime> _effective_time;
        partial void Oneffective_timeChanging(Nullable<global::System.DateTime> value);
        partial void Oneffective_timeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> min_qty
        {
            get
            {
                return _min_qty;
            }
            set
            {
                Onmin_qtyChanging(value);
                ReportPropertyChanging("min_qty");
                _min_qty = StructuralObject.SetValidValue(value, "min_qty");
                ReportPropertyChanged("min_qty");
                Onmin_qtyChanged();
            }
        }
        private Nullable<global::System.Double> _min_qty;
        partial void Onmin_qtyChanging(Nullable<global::System.Double> value);
        partial void Onmin_qtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 index
        {
            get
            {
                return _index;
            }
            set
            {
                OnindexChanging(value);
                ReportPropertyChanging("index");
                _index = StructuralObject.SetValidValue(value, "index");
                ReportPropertyChanged("index");
                OnindexChanged();
            }
        }
        private global::System.Int32 _index;
        partial void OnindexChanging(global::System.Int32 value);
        partial void OnindexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pos_id
        {
            get
            {
                return _pos_id;
            }
            set
            {
                Onpos_idChanging(value);
                ReportPropertyChanging("pos_id");
                _pos_id = StructuralObject.SetValidValue(value, "pos_id");
                ReportPropertyChanged("pos_id");
                Onpos_idChanged();
            }
        }
        private global::System.Int32 _pos_id;
        partial void Onpos_idChanging(global::System.Int32 value);
        partial void Onpos_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String clord_id
        {
            get
            {
                return _clord_id;
            }
            set
            {
                Onclord_idChanging(value);
                ReportPropertyChanging("clord_id");
                _clord_id = StructuralObject.SetValidValue(value, true, "clord_id");
                ReportPropertyChanged("clord_id");
                Onclord_idChanged();
            }
        }
        private global::System.String _clord_id;
        partial void Onclord_idChanging(global::System.String value);
        partial void Onclord_idChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StrategyReportsModel", "FK_orders_positions", "positions")]
        public positions positions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<positions>("StrategyReportsModel.FK_orders_positions", "positions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<positions>("StrategyReportsModel.FK_orders_positions", "positions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<positions> positionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<positions>("StrategyReportsModel.FK_orders_positions", "positions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<positions>("StrategyReportsModel.FK_orders_positions", "positions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StrategyReportsModel", Name="positions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class positions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new positions object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="pos_id">Initial value of the pos_id property.</param>
        /// <param name="symbol">Initial value of the symbol property.</param>
        /// <param name="side">Initial value of the side property.</param>
        /// <param name="quantity_type">Initial value of the quantity_type property.</param>
        /// <param name="price_type">Initial value of the price_type property.</param>
        /// <param name="cum_qty">Initial value of the cum_qty property.</param>
        public static positions Createpositions(global::System.Int32 id, global::System.String pos_id, global::System.String symbol, global::System.String side, global::System.Int32 quantity_type, global::System.Int32 price_type, global::System.Double cum_qty)
        {
            positions positions = new positions();
            positions.id = id;
            positions.pos_id = pos_id;
            positions.symbol = symbol;
            positions.side = side;
            positions.quantity_type = quantity_type;
            positions.price_type = price_type;
            positions.cum_qty = cum_qty;
            return positions;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pos_id
        {
            get
            {
                return _pos_id;
            }
            set
            {
                Onpos_idChanging(value);
                ReportPropertyChanging("pos_id");
                _pos_id = StructuralObject.SetValidValue(value, false, "pos_id");
                ReportPropertyChanged("pos_id");
                Onpos_idChanged();
            }
        }
        private global::System.String _pos_id;
        partial void Onpos_idChanging(global::System.String value);
        partial void Onpos_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String symbol
        {
            get
            {
                return _symbol;
            }
            set
            {
                OnsymbolChanging(value);
                ReportPropertyChanging("symbol");
                _symbol = StructuralObject.SetValidValue(value, false, "symbol");
                ReportPropertyChanged("symbol");
                OnsymbolChanged();
            }
        }
        private global::System.String _symbol;
        partial void OnsymbolChanging(global::System.String value);
        partial void OnsymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pos_status
        {
            get
            {
                return _pos_status;
            }
            set
            {
                Onpos_statusChanging(value);
                ReportPropertyChanging("pos_status");
                _pos_status = StructuralObject.SetValidValue(value, true, "pos_status");
                ReportPropertyChanged("pos_status");
                Onpos_statusChanged();
            }
        }
        private global::System.String _pos_status;
        partial void Onpos_statusChanging(global::System.String value);
        partial void Onpos_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String side
        {
            get
            {
                return _side;
            }
            set
            {
                OnsideChanging(value);
                ReportPropertyChanging("side");
                _side = StructuralObject.SetValidValue(value, false, "side");
                ReportPropertyChanged("side");
                OnsideChanged();
            }
        }
        private global::System.String _side;
        partial void OnsideChanging(global::System.String value);
        partial void OnsideChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String exchange
        {
            get
            {
                return _exchange;
            }
            set
            {
                OnexchangeChanging(value);
                ReportPropertyChanging("exchange");
                _exchange = StructuralObject.SetValidValue(value, true, "exchange");
                ReportPropertyChanged("exchange");
                OnexchangeChanged();
            }
        }
        private global::System.String _exchange;
        partial void OnexchangeChanging(global::System.String value);
        partial void OnexchangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 quantity_type
        {
            get
            {
                return _quantity_type;
            }
            set
            {
                Onquantity_typeChanging(value);
                ReportPropertyChanging("quantity_type");
                _quantity_type = StructuralObject.SetValidValue(value, "quantity_type");
                ReportPropertyChanged("quantity_type");
                Onquantity_typeChanged();
            }
        }
        private global::System.Int32 _quantity_type;
        partial void Onquantity_typeChanging(global::System.Int32 value);
        partial void Onquantity_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 price_type
        {
            get
            {
                return _price_type;
            }
            set
            {
                Onprice_typeChanging(value);
                ReportPropertyChanging("price_type");
                _price_type = StructuralObject.SetValidValue(value, "price_type");
                ReportPropertyChanged("price_type");
                Onprice_typeChanged();
            }
        }
        private global::System.Int32 _price_type;
        partial void Onprice_typeChanging(global::System.Int32 value);
        partial void Onprice_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> qty
        {
            get
            {
                return _qty;
            }
            set
            {
                OnqtyChanging(value);
                ReportPropertyChanging("qty");
                _qty = StructuralObject.SetValidValue(value, "qty");
                ReportPropertyChanged("qty");
                OnqtyChanged();
            }
        }
        private Nullable<global::System.Double> _qty;
        partial void OnqtyChanging(Nullable<global::System.Double> value);
        partial void OnqtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> cash_qty
        {
            get
            {
                return _cash_qty;
            }
            set
            {
                Oncash_qtyChanging(value);
                ReportPropertyChanging("cash_qty");
                _cash_qty = StructuralObject.SetValidValue(value, "cash_qty");
                ReportPropertyChanged("cash_qty");
                Oncash_qtyChanged();
            }
        }
        private Nullable<global::System.Double> _cash_qty;
        partial void Oncash_qtyChanging(Nullable<global::System.Double> value);
        partial void Oncash_qtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> percent
        {
            get
            {
                return _percent;
            }
            set
            {
                OnpercentChanging(value);
                ReportPropertyChanging("percent");
                _percent = StructuralObject.SetValidValue(value, "percent");
                ReportPropertyChanged("percent");
                OnpercentChanged();
            }
        }
        private Nullable<global::System.Double> _percent;
        partial void OnpercentChanging(Nullable<global::System.Double> value);
        partial void OnpercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double cum_qty
        {
            get
            {
                return _cum_qty;
            }
            set
            {
                Oncum_qtyChanging(value);
                ReportPropertyChanging("cum_qty");
                _cum_qty = StructuralObject.SetValidValue(value, "cum_qty");
                ReportPropertyChanged("cum_qty");
                Oncum_qtyChanged();
            }
        }
        private global::System.Double _cum_qty;
        partial void Oncum_qtyChanging(global::System.Double value);
        partial void Oncum_qtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> leaves_qty
        {
            get
            {
                return _leaves_qty;
            }
            set
            {
                Onleaves_qtyChanging(value);
                ReportPropertyChanging("leaves_qty");
                _leaves_qty = StructuralObject.SetValidValue(value, "leaves_qty");
                ReportPropertyChanged("leaves_qty");
                Onleaves_qtyChanged();
            }
        }
        private Nullable<global::System.Double> _leaves_qty;
        partial void Onleaves_qtyChanging(Nullable<global::System.Double> value);
        partial void Onleaves_qtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> avg_px
        {
            get
            {
                return _avg_px;
            }
            set
            {
                Onavg_pxChanging(value);
                ReportPropertyChanging("avg_px");
                _avg_px = StructuralObject.SetValidValue(value, "avg_px");
                ReportPropertyChanged("avg_px");
                Onavg_pxChanged();
            }
        }
        private Nullable<global::System.Double> _avg_px;
        partial void Onavg_pxChanging(Nullable<global::System.Double> value);
        partial void Onavg_pxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> last_qty
        {
            get
            {
                return _last_qty;
            }
            set
            {
                Onlast_qtyChanging(value);
                ReportPropertyChanging("last_qty");
                _last_qty = StructuralObject.SetValidValue(value, "last_qty");
                ReportPropertyChanged("last_qty");
                Onlast_qtyChanged();
            }
        }
        private Nullable<global::System.Double> _last_qty;
        partial void Onlast_qtyChanging(Nullable<global::System.Double> value);
        partial void Onlast_qtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String last_mkt
        {
            get
            {
                return _last_mkt;
            }
            set
            {
                Onlast_mktChanging(value);
                ReportPropertyChanging("last_mkt");
                _last_mkt = StructuralObject.SetValidValue(value, true, "last_mkt");
                ReportPropertyChanged("last_mkt");
                Onlast_mktChanged();
            }
        }
        private global::System.String _last_mkt;
        partial void Onlast_mktChanging(global::System.String value);
        partial void Onlast_mktChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StrategyReportsModel", "FK_execution_reports_positions", "execution_reports")]
        public EntityCollection<execution_reports> execution_reports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<execution_reports>("StrategyReportsModel.FK_execution_reports_positions", "execution_reports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<execution_reports>("StrategyReportsModel.FK_execution_reports_positions", "execution_reports", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StrategyReportsModel", "FK_orders_positions", "orders")]
        public EntityCollection<orders> orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<orders>("StrategyReportsModel.FK_orders_positions", "orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<orders>("StrategyReportsModel.FK_orders_positions", "orders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StrategyReportsModel", "FK_execution_summaries_positions1", "execution_summaries")]
        public EntityCollection<execution_summaries> execution_summaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<execution_summaries>("StrategyReportsModel.FK_execution_summaries_positions1", "execution_summaries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<execution_summaries>("StrategyReportsModel.FK_execution_summaries_positions1", "execution_summaries", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StrategyReportsModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagrams object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="StrategyReportsModel", Name="sp_helpdiagramdefinition_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagramdefinition_Result : ComplexObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="StrategyReportsModel", Name="sp_helpdiagrams_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagrams_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_helpdiagrams_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="ownerID">Initial value of the OwnerID property.</param>
        public static sp_helpdiagrams_Result Createsp_helpdiagrams_Result(global::System.String name, global::System.Int32 id, global::System.Int32 ownerID)
        {
            sp_helpdiagrams_Result sp_helpdiagrams_Result = new sp_helpdiagrams_Result();
            sp_helpdiagrams_Result.Name = name;
            sp_helpdiagrams_Result.ID = id;
            sp_helpdiagrams_Result.OwnerID = ownerID;
            return sp_helpdiagrams_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Database
        {
            get
            {
                return _Database;
            }
            set
            {
                OnDatabaseChanging(value);
                ReportPropertyChanging("Database");
                _Database = StructuralObject.SetValidValue(value, true, "Database");
                ReportPropertyChanged("Database");
                OnDatabaseChanged();
            }
        }
        private global::System.String _Database;
        partial void OnDatabaseChanging(global::System.String value);
        partial void OnDatabaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value, "ID");
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true, "Owner");
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerID
        {
            get
            {
                return _OwnerID;
            }
            set
            {
                OnOwnerIDChanging(value);
                ReportPropertyChanging("OwnerID");
                _OwnerID = StructuralObject.SetValidValue(value, "OwnerID");
                ReportPropertyChanged("OwnerID");
                OnOwnerIDChanged();
            }
        }
        private global::System.Int32 _OwnerID;
        partial void OnOwnerIDChanging(global::System.Int32 value);
        partial void OnOwnerIDChanged();

        #endregion

    }

    #endregion

}
